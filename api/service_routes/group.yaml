openapi: '3.0.2'
info:
  title: api title
  version: '1.0'
servers:
  - url: https://group.reserva.emilharvey.ca
paths:
  /groups/{id}:
    parameters:
        - name: id
          in: path
          required: true
          schema:
            $ref: "#/components/schemas/groupid"
    get:
      summary: gets a group object by id
      security:
        - standard: [read:groups:associated]
      responses:
        '200':
          description: ok
          content:
            application/json:
              schema:
                properties:
                  "group":
                    $ref: "#/components/schemas/group"
    put:
      summary: updates a group object
      security:
        - standard: [write:groups:me]      
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/updategroup"
      responses:
        '200':
          description: ok
          content:
            application/json:
              schema:
                properties:
                  group:
                    $ref: "#/components/schemas/group"
    delete:
      summary: deletes a group object
      security:
        - standard: [write:groups:me]
      responses:
        '204':
          description: deleted
  
  /groups/{id}/memberships:
    parameters:
      - name: id
        in: path
        required: true
        schema:
          $ref: "#/components/schemas/groupid"
    get:
      summary: gets a list of groupmembership objects
      security:
        - standard: [read:groups:associated]
      responses:
        '200':
          description: ok
          content:
            application/json:
              schema:
                properties:
                  groupmemberships:
                    type: array
                    items:
                      $ref: "#/components/schemas/groupmembership"
    post:
      summary: creates a new groupmembership object
      security:
        - standard: [write:groups:me]
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/newgroupmembership"
      responses:
        '201':
          description: ok
          content:
            application/json:
              schema:
                properties:
                  groupmembership:
                    $ref: "#/components/schemas/groupmembership"
  
  /groups/{id}/memberships/{membershipid}:
    parameters:
      - name: id
        in: path
        required: true
        schema:
          $ref: "#/components/schemas/groupid"
      - name: membershipid
        in: path
        required: true
        schema:
          $ref: "#/components/schemas/groupmembershipid"
    get:
      summary: gets a groupmembership object by id
      security:
        - standard: [read:groups:associated]
      responses:
        '200':
          description: ok
          content:
            application/json:
              schema:
                properties:
                  groupmembership:
                    $ref: "#/components/schemas/groupmembership"
        '404':
          description: not found
    delete:
      summary: deletes a groupmembership object
      security:
        - standard: 
            - write:groups:me
            - write:groupmemberships:me
      responses:
        '204':
          description: deleted
        '404':
          description: not found
  
  /groups:
    post: 
      summary: creates a new group object
      security:
        - standard: [write:groups:me] 
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/newgroup"

      responses:
        '201':
          description: ok
          content:
            application/json:
              schema:
                properties:
                  group:
                    $ref: "#/components/schemas/group"
components:
  schemas:
    $ref: "../schemas/group/_index.yaml"
  securitySchemes:
    $ref: '../security/_all.yaml'