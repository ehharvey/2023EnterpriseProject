openapi: '3.0.2'
info:
  title: api title
  version: '1.0'
servers:
  - url: https://unavailability.reserva.emilharvey.ca
paths:
  /unavailabilities/{id}:
    parameters:
    - name: id
      in: path
      required: true
      schema:
        $ref: "#/components/schemas/unavailabilityid"
      description: the unavailability id
    put:
      security:
        - staff: [write:unavailabilities:me]
        - standard: [write:unavailabilities:me]
      
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                properties:
                  booking:
                    type: object
                    $ref: "#/components/schemas/updateunavailability"
          description: ok
        '400':
          content:
            application/json:
              schema:
                $ref: '../schemas/meta/error.yaml'
          description: bad request
    delete:
      description: delete a specific unavailability identified by the `id` parameter.
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: "../schemas/meta/success.yaml"
          description: deleted
        '400':
          content:
            application/json:
              schema:
                $ref: '../schemas/meta/error.yaml'
          description: bad request
  /unavailabilities:
    get:
      description: retrieve all unavailability associated with a student or a room.
      # todo: add query parameters for filtering
      # todo: add query parameters for pagination
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                properties:
                  unavailabilities:
                    type: array
                    items:
                      type: object
                      $ref: "#/components/schemas/unavailability"
          description: ok
    
    post:
      requestBody:
        content:
          application/json:
            schema:
              oneOf:
                - $ref: "#/components/schemas/newunavailability"
                - $ref: "#/components/schemas/newrecurringunavailability"
      responses:
        '201':
          content:
            text/plain:
              schema:
                type: string
                example: created
          description: created
        '400':
          content:
            text/plain:
              schema:
                type: string
                example: bad request
          description: bad request


components:
  schemas:
    $ref: "../schemas/unavailability/_index.yaml"
  securitySchemes:
    $ref: '../security/_all.yaml'