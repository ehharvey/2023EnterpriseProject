openapi: '3.0.2'
info:
  title: API Title
  version: '1.0'
servers:
  - url: https://unavailability.reserva.emilharvey.ca
paths:
  /unavailabilities/{id}:
    parameters:
    - name: id
      in: path
      required: true
      schema:
        $ref: "#/components/schemas/UnavailabilityId"
      description: The unavailability ID
    get:
      description: Retrieves information about a specific unavailability identified by the `id` parameter.
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                properties:
                  unavailability:
                    type: object
                    $ref: "#/components/schemas/Unavailability"
          description: OK
        '400':
          content:
            application/json:
              schema:
                $ref: '../schemas/meta/Error.yaml'
          description: Bad Request
    put:
      description: >
        Update a specific unavailability identified by the `id` parameter with the information 
        provided in the request body.
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                properties:
                  Booking:
                    type: object
                    $ref: "#/components/schemas/UpdateUnavailability"
          description: OK
        '400':
          content:
            application/json:
              schema:
                $ref: '../schemas/meta/Error.yaml'
          description: Bad Request
    delete:
      description: Delete a specific unavailability identified by the `id` parameter.
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: "../schemas/meta/Success.yaml"
          description: Deleted
        '400':
          content:
            application/json:
              schema:
                $ref: '../schemas/meta/Error.yaml'
          description: Bad Request
  /unavailabilities:
    get:
      description: Retrieve all unavailability associated with a student or a room.
      # TODO: Add query parameters for filtering
      # TODO: Add query parameters for pagination
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                properties:
                  Unavailabilities:
                    type: array
                    items:
                      type: object
                      $ref: "#/components/schemas/Unavailability"
          description: OK
    
    post:
      requestBody:
        content:
          application/json:
            schema:
              oneOf:
                - $ref: "#/components/schemas/NewUnavailability"
                - $ref: "#/components/schemas/NewRecurringUnavailability"
      responses:
        '201':
          content:
            text/plain:
              schema:
                type: string
                example: Created
          description: Created
        '400':
          content:
            text/plain:
              schema:
                type: string
                example: Bad Request
          description: Bad Request


components:
  schemas:
    $ref: "../schemas/unavailability/_index.yaml"