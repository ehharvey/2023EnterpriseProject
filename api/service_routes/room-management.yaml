openapi: '3.0.2'
info:
  title: API Title
  version: '1.0'
servers:
  - url: https://api.reserva.emilharvey.ca
paths:
  /rooms/{id}:
    get:
      tags: 
        - Room Management
      summary: Gets a Room object by id
      description: >
        ## Do you really need more of a description?

        Request for GET /students/{id} requires an id
      operationId: getRoomId
      parameters:
        - name: id
          in: path
          description: User ID
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                properties:
                  "Student":
                    $ref: "#/components/schemas/Student"
    put:
      tags: 
        - Room Management
      summary: Updates a Room object
      description: >
        ## Do you really need more of a description?

        Request for PUT /rooms requires an id
      operationId: putRoomId
      parameters:
        - name: id
          in: path
          description: User ID
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                properties:
                  "Room":
                    $ref: "#/components/schemas/Room"
    delete:
      tags: 
        - Room Management
      summary: Delete a Room object existing in the Rooms resources
      description: >
        ## Do you really need more of a description?

        Request for PUT /rooms requires an id
      operationId: putRoomId
      parameters:
        - name: id
          in: path
          description: User ID
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '204':
          description: Deleted
  

  /rooms:
    post: 
      tags: 
        - Room Management
      summary: Posts a Room object to the Rooms resources
      description: >
        ## Do you really need more of a description?

        Request for POST /rooms requires a json body
      operationId: getStudentbyId
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Room"

      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                properties:
                  "Room":
                    $ref: "#/components/schemas/Room"

    get:
      tags: 
        - Room Search
      summary: Gets a Room object via Search
      description: >
        ## Do you really need more of a description?

        Request for GET /students/{id} requires an id
      operationId: getRoomId
      parameters:
        - in: query
          name: offset
          schema:
            type: integer
          description: The number of items to skip before starting to collect the result set
        - in: query
          name: limit
          schema:
            type: integer
          description: The numbers of items to return
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                properties:
                  "Student":
                    $ref: "#/components/schemas/Student"

components:
  schemas:
    $ref: "../schemas/_index.yaml"