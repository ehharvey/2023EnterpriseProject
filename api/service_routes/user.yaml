openapi: 3.0.0
info:
  title: User Service API
  description: This API manages user authentication, authorization, and admin management.
  version: 0.0.2
servers:
  - url: http://user.reserva.emilharvey.ca
paths:
  /users:
    get:
      summary: Get all users
      description: Returns a list of all users.
      responses:
        "200":
          description: A list of users
          content:
            application/json:
              schema:
                properties:
                  users:
                    type: array
                    items:
                      $ref: "#/components/schemas/User"
  /users/{userId}:
    get:
      summary: Get a user by ID
      description: Returns a single user by ID.
      parameters:
        - name: userId
          in: path
          required: true
          description: The ID of the user to retrieve.
          schema:
            type: integer
      responses:
        "200":
          description: The requested user
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/User"
        "404":
          description: User not found
  /users/admins:
    get:
      summary: Get all admin users
      description: Returns a list of all admin users.
      responses:
        "200":
          description: A list of admin users
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/User"
  /users/standard:
    get:
      summary: Get all standard users
      description: Returns a list of all standard users.
      responses:
        "200":
          description: A list of standard users
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/User"
  /users/{userId}/groups:
    get:
      summary: Get all groups for a user
      description: Returns a list of all groups for a user.
      parameters:
        - name: userId
          in: path
          required: true
          description: The ID of the user to retrieve groups for.
          schema:
            type: integer
      responses:
        "200":
          description: A list of groups
          content:
            application/json:
              schema:
                properties:  
                  groups:
                    type: array
                    items:
                      $ref: "#/components/schemas/GroupMembership"
        
components:
  schemas:
    $ref: "../schemas/user/_index.yaml"
