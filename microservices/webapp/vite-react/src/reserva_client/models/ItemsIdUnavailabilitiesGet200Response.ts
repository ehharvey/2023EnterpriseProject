/* tslint:disable */
/* eslint-disable */
/**
 * Main API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { Unavailability } from './Unavailability';
import {
    UnavailabilityFromJSON,
    UnavailabilityFromJSONTyped,
    UnavailabilityToJSON,
} from './Unavailability';

/**
 * 
 * @export
 * @interface ItemsIdUnavailabilitiesGet200Response
 */
export interface ItemsIdUnavailabilitiesGet200Response {
    /**
     * 
     * @type {Array<Unavailability>}
     * @memberof ItemsIdUnavailabilitiesGet200Response
     */
    unavailabilities?: Array<Unavailability>;
}

/**
 * Check if a given object implements the ItemsIdUnavailabilitiesGet200Response interface.
 */
export function instanceOfItemsIdUnavailabilitiesGet200Response(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function ItemsIdUnavailabilitiesGet200ResponseFromJSON(json: any): ItemsIdUnavailabilitiesGet200Response {
    return ItemsIdUnavailabilitiesGet200ResponseFromJSONTyped(json, false);
}

export function ItemsIdUnavailabilitiesGet200ResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): ItemsIdUnavailabilitiesGet200Response {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'unavailabilities': !exists(json, 'unavailabilities') ? undefined : ((json['unavailabilities'] as Array<any>).map(UnavailabilityFromJSON)),
    };
}

export function ItemsIdUnavailabilitiesGet200ResponseToJSON(value?: ItemsIdUnavailabilitiesGet200Response | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'unavailabilities': value.unavailabilities === undefined ? undefined : ((value.unavailabilities as Array<any>).map(UnavailabilityToJSON)),
    };
}

