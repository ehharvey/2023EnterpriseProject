/* tslint:disable */
/* eslint-disable */
/**
 * Main API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * an unavailability. this could be a maintenance window, a booking, or something else. the difference between this and newUnavailability is that this has an id, which is assigned by the server. it also has timestamps for when the unavailability was created and last updated.
 * @export
 * @interface UnavailabilityAllOf
 */
export interface UnavailabilityAllOf {
    /**
     * the id of an unavailability.
     * @type {string}
     * @memberof UnavailabilityAllOf
     */
    id: string;
    /**
     * the date and time the unavailability was created.
     * @type {Date}
     * @memberof UnavailabilityAllOf
     */
    readonly createDate: Date;
    /**
     * the date and time the unavailability was last updated.
     * @type {Date}
     * @memberof UnavailabilityAllOf
     */
    readonly lastUpdatedDate: Date;
}

/**
 * Check if a given object implements the UnavailabilityAllOf interface.
 */
export function instanceOfUnavailabilityAllOf(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "id" in value;
    isInstance = isInstance && "createDate" in value;
    isInstance = isInstance && "lastUpdatedDate" in value;

    return isInstance;
}

export function UnavailabilityAllOfFromJSON(json: any): UnavailabilityAllOf {
    return UnavailabilityAllOfFromJSONTyped(json, false);
}

export function UnavailabilityAllOfFromJSONTyped(json: any, ignoreDiscriminator: boolean): UnavailabilityAllOf {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': json['id'],
        'createDate': (new Date(json['createDate'])),
        'lastUpdatedDate': (new Date(json['lastUpdatedDate'])),
    };
}

export function UnavailabilityAllOfToJSON(value?: UnavailabilityAllOf | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'id': value.id,
    };
}

