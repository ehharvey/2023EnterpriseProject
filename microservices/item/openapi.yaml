openapi: 3.1.0
info:
  title: API Title
  version: 0.0.1
servers:
- url: https://item.reserva.emilharvey.ca
paths:
  /items/{id}:
    delete:
      description: |
        ## More Information
        Request for `DELETE/rooms/{id}` requires an id
      operationId: deleteRoomId
      parameters:
      - description: User ID
        explode: false
        in: path
        name: id
        required: true
        schema:
          format: int64
        style: simple
      responses:
        "204":
          description: Deleted
        "404":
          description: |
            Item Not Found
      summary: Delete a Room object existing in the Rooms resources
    get:
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          $ref: '#/components/schemas/ItemId'
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_items__id__get_200_response'
          description: OK
        "404":
          description: |
            Item Not Found
      summary: "Gets a Item object by id. For now, the only kind of item is a room."
    parameters:
    - explode: false
      in: path
      name: id
      required: true
      schema:
        $ref: '#/components/schemas/ItemId'
      style: simple
    put:
      parameters:
      - description: User ID
        explode: false
        in: path
        name: id
        required: true
        schema:
          format: int64
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Item'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_items__id__put_200_response'
          description: OK
        "404":
          description: |
            Item Not Found
      summary: "Updates an item. For now, the only kind of item is a room."
  /items:
    get:
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_items_get_200_response'
          description: OK
      summary: "Gets a list of items. For now, the only kind of item is a room."
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewItem'
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_items__id__get_200_response'
          description: Created
        "400":
          description: |
            Bad Request
      summary: "Posts an item. For now, the only kind of item is a room."
components:
  schemas:
    Feature:
      description: |
        The data required to create a new feature.
      properties:
        name:
          description: The name of the feature.
        value:
          description: The value of the feature.
      required:
      - name
      - value
    Item:
      allOf:
      - $ref: '#/components/schemas/NewItem'
      - properties:
          id:
            $ref: '#/components/schemas/ItemId'
          createdAt:
            description: The date and time the item was created.
            example: 2019-01-01T00:00:00Z
            format: date-time
            readOnly: true
          lastUpdatedAt:
            description: The date and time the item was last updated.
            example: 2019-03-01T00:00:00Z
            format: date-time
            readOnly: true
        required:
        - id
      description: |
        The data returned when an item is retrieved. This is the base schema for all item retrievals. The difference between this and the NewItem schema is that this schema includes the ID, createdAt, and lastUpdatedAt fields.
      title: Room
    ItemId:
      description: |
        The ID of the item. This is a UUID with a prefix of "item-".
      example: item-cc354ffb-fa63-4a67-a67f-a24048c26c3f
      format: uuid
      pattern: "^[a-z]+-[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$"
    NewItem:
      allOf:
      - $ref: '#/components/schemas/UpdateItem'
      description: |
        The data required to create a new item. This is the base schema for all item creations. The difference between this and the UpdateItem schema is that this schema requires all fields to be present.
      required:
      - description
      - features
      - location
      - name
      - type
    UpdateItem:
      description: |
        The data required to update an item. This is the base schema for all item updates.
      example:
        features:
        - name: Style
          value: Modern
        - name: Size
          value: 1000
        - name: Has Windows
          value: true
        name: Large Room
        description: Large Room with Low Ceilings
        location: 1st Floor
        type: Room
      properties:
        name:
          description: "The name of the item. For now, these will be names of rooms"
          example: Large Room
          title: name
        location:
          description: The location of the item.
          example: 1st Floor
          title: location
        description:
          description: A description of the item.
          example: Large Room with Low Ceilings
          title: description
        type:
          description: "The type of the item. For now, this will only be Room."
          enum:
          - Room
          example: Room
          title: type
        features:
          description: |
            The features of the item. For now, these will be the features of the room.
          example:
          - name: Style
            value: Modern
          - name: Size
            value: 1000
          - name: Has Windows
            value: true
          items:
            $ref: '#/components/schemas/Feature'
          title: features
      title: UpdateItem
    _items__id__get_200_response:
      example:
        Room: ""
      properties:
        Room:
          allOf:
          - $ref: '#/components/schemas/NewItem'
          - properties:
              id:
                $ref: '#/components/schemas/ItemId'
              createdAt:
                description: The date and time the item was created.
                example: 2019-01-01T00:00:00Z
                format: date-time
                readOnly: true
              lastUpdatedAt:
                description: The date and time the item was last updated.
                example: 2019-03-01T00:00:00Z
                format: date-time
                readOnly: true
            required:
            - id
          description: |
            The data returned when an item is retrieved. This is the base schema for all item retrievals. The difference between this and the NewItem schema is that this schema includes the ID, createdAt, and lastUpdatedAt fields.
          title: Room
      title: _items__id__get_200_response
    _items__id__put_200_response:
      example:
        Room:
          features:
          - name: Style
            value: Modern
          - name: Size
            value: 1000
          - name: Has Windows
            value: true
          name: Large Room
          description: Large Room with Low Ceilings
          location: 1st Floor
          type: Room
      properties:
        Room:
          $ref: '#/components/schemas/UpdateItem'
      title: _items__id__put_200_response
    _items_get_200_response:
      example:
        items: ""
      properties:
        items:
          allOf:
          - $ref: '#/components/schemas/NewItem'
          - properties:
              id:
                $ref: '#/components/schemas/ItemId'
              createdAt:
                description: The date and time the item was created.
                example: 2019-01-01T00:00:00Z
                format: date-time
                readOnly: true
              lastUpdatedAt:
                description: The date and time the item was last updated.
                example: 2019-03-01T00:00:00Z
                format: date-time
                readOnly: true
            required:
            - id
          description: |
            The data returned when an item is retrieved. This is the base schema for all item retrievals. The difference between this and the NewItem schema is that this schema includes the ID, createdAt, and lastUpdatedAt fields.
          title: Room
      title: _items_get_200_response
