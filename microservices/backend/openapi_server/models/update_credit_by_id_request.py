# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from openapi_server.models.base_model_ import Model
from openapi_server import util


class UpdateCreditByIdRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, amount=None):  # noqa: E501
        """UpdateCreditByIdRequest - a model defined in OpenAPI

        :param amount: The amount of this UpdateCreditByIdRequest.  # noqa: E501
        :type amount: int
        """
        self.openapi_types = {
            'amount': int
        }

        self.attribute_map = {
            'amount': 'amount'
        }

        self._amount = amount

    @classmethod
    def from_dict(cls, dikt) -> 'UpdateCreditByIdRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The updateCreditById_request of this UpdateCreditByIdRequest.  # noqa: E501
        :rtype: UpdateCreditByIdRequest
        """
        return util.deserialize_model(dikt, cls)

    @property
    def amount(self):
        """Gets the amount of this UpdateCreditByIdRequest.

        The new amount of the credit in units.  # noqa: E501

        :return: The amount of this UpdateCreditByIdRequest.
        :rtype: int
        """
        return self._amount

    @amount.setter
    def amount(self, amount):
        """Sets the amount of this UpdateCreditByIdRequest.

        The new amount of the credit in units.  # noqa: E501

        :param amount: The amount of this UpdateCreditByIdRequest.
        :type amount: int
        """
        if amount is None:
            raise ValueError("Invalid value for `amount`, must not be `None`")  # noqa: E501

        self._amount = amount
