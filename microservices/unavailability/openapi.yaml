openapi: 3.0.2
info:
  title: API Title
  version: "1.0"
servers:
- url: https://unavailability.reserva.emilharvey.ca
paths:
  /unavailabilities/{id}:
    delete:
      description: Delete a specific unavailability identified by the `id` parameter.
      parameters:
      - description: The unavailability ID
        explode: false
        in: path
        name: id
        required: true
        schema:
          $ref: '#/components/schemas/UnavailabilityId'
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_unavailabilities__id__delete_200_response'
          description: Deleted
        "400":
          content:
            application/json:
              schema:
                $ref: '#/paths/~1unavailabilities~1%7Bid%7D/get/responses/400/content/application~1json/schema'
          description: Bad Request
    get:
      description: Retrieves information about a specific unavailability identified
        by the `id` parameter.
      parameters:
      - description: The unavailability ID
        explode: false
        in: path
        name: id
        required: true
        schema:
          $ref: '#/components/schemas/UnavailabilityId'
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_unavailabilities__id__get_200_response'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_unavailabilities__id__get_400_response'
          description: Bad Request
    put:
      description: |
        Update a specific unavailability identified by the `id` parameter with the information  provided in the request body.
      parameters:
      - description: The unavailability ID
        explode: false
        in: path
        name: id
        required: true
        schema:
          $ref: '#/components/schemas/UnavailabilityId'
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_unavailabilities__id__put_200_response'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/paths/~1unavailabilities~1%7Bid%7D/get/responses/400/content/application~1json/schema'
          description: Bad Request
  /unavailabilities:
    get:
      description: Retrieve all unavailability associated with a student or a room.
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_unavailabilities_get_200_response'
          description: OK
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/_unavailabilities_post_request'
      responses:
        "201":
          content:
            text/plain:
              schema:
                example: Created
                type: string
          description: Created
        "400":
          content:
            text/plain:
              schema:
                example: Bad Request
                type: string
          description: Bad Request
components:
  schemas:
    UpdateUnavailability:
      description: |
        An update to an unavailability. This could be a maintenance window, a booking, or something else. This is the base type for all unavailability updates. As a result, it does not have an ID, because it is not a complete unavailability. It also has no required fields, because only need to send a fragment of this data to update an unavailability.
      example:
        item: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        startDateTime: 2023-04-02T15:00:00
        endDateTime: 2023-04-02T15:00:00
        type: maintenance
      properties:
        item:
          description: "The ID of the item to be booked. For now, only rooms can be\
            \ booked."
          format: uuid
          pattern: "^[a-z]+-[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$"
          title: item
          type: string
        startDateTime:
          description: "Date-time string with 15-minute interval, e.g., 2023-04-02T12:00:00"
          example: 2023-04-02T15:00:00
          pattern: "^[0-9]{4}-[0-9]{2}-[0-9]{2}T([01][0-9]|2[0-3]):(00|15|30|45):00$"
          title: startDateTime
          type: string
        endDateTime:
          description: "Date-time string with 15-minute interval, e.g., 2023-04-02T12:00:00"
          example: 2023-04-02T15:00:00
          pattern: "^[0-9]{4}-[0-9]{2}-[0-9]{2}T([01][0-9]|2[0-3]):(00|15|30|45):00$"
          title: startDateTime
          type: string
        type:
          enum:
          - maintenance
          - booking
          - off_hours
          - other
          title: type
          type: string
      title: UpdateUnavailability
      type: object
    Unavailability:
      allOf:
      - $ref: '#/components/schemas/NewUnavailability'
      - $ref: '#/components/schemas/Unavailability_allOf'
      title: Unavailability
    NewUnavailability:
      allOf:
      - $ref: '#/components/schemas/UpdateUnavailability'
      description: A new unavailability. This is sent when a client wants to create
        a new unavailability.
      required:
      - endDateTime
      - item
      - room
      - startDateTime
      - type
      title: NewUnavailability
    NewRecurringUnavailability:
      allOf:
      - $ref: '#/components/schemas/NewUnavailability'
      - $ref: '#/components/schemas/NewRecurringUnavailability_allOf'
      description: |
        A recurring unavailability. This could be a maintenance window, a booking, or something else. The client will send this when they want to create a new recurring unavailability.
      title: NewRecurringUnavailability
    RecurringUnavailability:
      allOf:
      - $ref: '#/components/schemas/NewRecurringUnavailability'
      - $ref: '#/components/schemas/RecurringUnavailability_allOf'
      description: |
        A recurring unavailability. This could be a maintenance window, a booking, or something else. The server will send this to clients
    DateTime15Min:
      description: "Date-time string with 15-minute interval, e.g., 2023-04-02T12:00:00"
      example: 2023-04-02T15:00:00
      pattern: "^[0-9]{4}-[0-9]{2}-[0-9]{2}T([01][0-9]|2[0-3]):(00|15|30|45):00$"
      title: startDateTime
      type: string
    UnavailabilityId:
      description: |
        The ID of an unavailability. This is a UUID with the prefix "unavailability-".
      format: uuid
      pattern: "^[a-z]+-[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$"
      title: UnavailabilityId
      type: string
    _unavailabilities__id__get_200_response:
      example:
        unavailability: null
      properties:
        unavailability:
          $ref: '#/components/schemas/Unavailability'
      title: _unavailabilities__id__get_200_response
      type: object
    _unavailabilities__id__get_400_response:
      description: |
        A generic error response. It has a message property, which is a string.
      properties:
        message:
          title: message
          type: string
      title: _unavailabilities__id__get_400_response
      type: object
    _unavailabilities__id__put_200_response:
      example:
        Booking:
          item: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          startDateTime: 2023-04-02T15:00:00
          endDateTime: 2023-04-02T15:00:00
          type: maintenance
      properties:
        Booking:
          $ref: '#/components/schemas/UpdateUnavailability'
      title: _unavailabilities__id__put_200_response
      type: object
    _unavailabilities__id__delete_200_response:
      description: |
        A generic success response. It has a message property, which is a string.
      example:
        message: message
      properties:
        message:
          title: message
          type: string
      title: _unavailabilities__id__delete_200_response
      type: object
    _unavailabilities_get_200_response:
      example:
        Unavailabilities:
        - null
        - null
      properties:
        Unavailabilities:
          items:
            $ref: '#/components/schemas/Unavailability'
          title: Unavailabilities
          type: array
      title: _unavailabilities_get_200_response
      type: object
    _unavailabilities_post_request:
      oneOf:
      - $ref: '#/components/schemas/NewUnavailability'
      - $ref: '#/components/schemas/NewRecurringUnavailability'
      title: _unavailabilities_post_request
    Unavailability_allOf:
      description: |
        An unavailability. This could be a maintenance window, a booking, or something else. The difference between this and NewUnavailability is that this has an ID, which is assigned by the server. It also has timestamps for when the unavailability was created and last updated.
      properties:
        id:
          description: |
            The ID of an unavailability. This is a UUID with the prefix "unavailability-".
          format: uuid
          pattern: "^[a-z]+-[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$"
          title: UnavailabilityId
          type: string
        createdAt:
          description: The date and time the unavailability was created.
          example: 2019-01-01T00:00:00Z
          format: date-time
          readOnly: true
          title: createdAt
          type: string
        lastUpdatedAt:
          description: The date and time the unavailability was last updated.
          example: 2019-03-01T00:00:00Z
          format: date-time
          readOnly: true
          title: lastUpdatedAt
          type: string
      required:
      - createdAt
      - id
      - lastUpdatedAt
      title: Unavailability_allOf
      type: object
      example: null
    NewRecurringUnavailability_allOf:
      properties:
        recurrence:
          description: "Date-time string with 15-minute interval, e.g., 2023-04-02T12:00:00"
          example: 2023-04-02T15:00:00
          pattern: "^[0-9]{4}-[0-9]{2}-[0-9]{2}T([01][0-9]|2[0-3]):(00|15|30|45):00$"
          title: startDateTime
          type: string
      required:
      - recurrence
      title: NewRecurringUnavailability_allOf
      type: object
      example: null
    RecurringUnavailability_allOf:
      properties:
        id:
          description: |
            The ID of an unavailability. This is a UUID with the prefix "unavailability-".
          format: uuid
          pattern: "^[a-z]+-[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$"
          title: UnavailabilityId
          type: string
      required:
      - id
      title: RecurringUnavailability_allOf
      type: object
      example: null
