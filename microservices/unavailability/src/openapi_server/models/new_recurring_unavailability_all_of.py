# coding: utf-8

from __future__ import annotations
from datetime import date, datetime  # noqa: F401

import re  # noqa: F401
from typing import Any, Dict, List, Optional  # noqa: F401

from pydantic import AnyUrl, BaseModel, EmailStr, Field, validator  # noqa: F401


class NewRecurringUnavailabilityAllOf(BaseModel):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.

    NewRecurringUnavailabilityAllOf - a model defined in OpenAPI

        recurrence: The recurrence of this NewRecurringUnavailabilityAllOf.
    """

    recurrence: str = Field(alias="recurrence")

    @validator("recurrence")
    def recurrence_pattern(cls, value):
        assert value is not None and re.match(r"^[0-9]{4}-[0-9]{2}-[0-9]{2}T([01][0-9]|2[0-3]):(00|15|30|45):00$", value)
        return value

NewRecurringUnavailabilityAllOf.update_forward_refs()
