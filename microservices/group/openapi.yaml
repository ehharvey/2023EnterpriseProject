openapi: 3.0.2
info:
  title: API Title
  version: "1.0"
servers:
- url: https://group.reserva.emilharvey.ca
paths:
  /groups/{id}:
    delete:
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          $ref: '#/components/schemas/GroupId'
        style: simple
      responses:
        "204":
          description: Deleted
      summary: Deletes a Group object
    get:
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          $ref: '#/components/schemas/GroupId'
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_groups__id__get_200_response'
          description: OK
      summary: Gets a Group object by id
    put:
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          $ref: '#/components/schemas/GroupId'
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateGroup'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_groups__id__get_200_response'
          description: OK
      summary: Updates a Group object
  /groups/{id}/memberships:
    get:
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          $ref: '#/components/schemas/GroupId'
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_groups__id__memberships_get_200_response'
          description: OK
      summary: Gets a list of GroupMembership objects
    post:
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          $ref: '#/components/schemas/GroupId'
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewGroupMembership'
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_groups__id__memberships_post_201_response'
          description: OK
      summary: Creates a new GroupMembership object
  /groups/{id}/memberships/{membershipId}:
    delete:
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          $ref: '#/components/schemas/GroupId'
        style: simple
      - explode: false
        in: path
        name: membershipId
        required: true
        schema:
          $ref: '#/components/schemas/GroupMembershipId'
        style: simple
      responses:
        "204":
          description: Deleted
        "404":
          description: Not Found
      summary: Deletes a GroupMembership object
    get:
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          $ref: '#/components/schemas/GroupId'
        style: simple
      - explode: false
        in: path
        name: membershipId
        required: true
        schema:
          $ref: '#/components/schemas/GroupMembershipId'
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_groups__id__memberships_post_201_response'
          description: OK
        "404":
          description: Not Found
      summary: Gets a GroupMembership object by id
  /groups:
    get:
      parameters: []
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_groups_get_200_response'
          description: OK
      summary: Gets a list of Group objects
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewGroup'
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_groups__id__get_200_response'
          description: OK
components:
  schemas:
    Group:
      allOf:
      - $ref: '#/components/schemas/NewGroup'
      - $ref: '#/components/schemas/Group_allOf'
      title: Group
    GroupMembership:
      allOf:
      - $ref: '#/components/schemas/NewGroupMembership'
      - $ref: '#/components/schemas/GroupMembership_allOf'
      title: GroupMembership
    NewGroupMembership:
      description: |
        This is a group membership. It is the intermediate object between a user and a group. It is used to determine which users are members of which groups.
      example:
        user: "{}"
        group: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
      properties:
        group:
          description: |
            The ID of a group. This is a UUID with the prefix "group-".
          format: uuid
          pattern: "^[a-z]+-[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$"
          title: GroupId
          type: string
        user:
          $ref: '#/components/schemas/UpdateGroup/properties/createdBy'
      required:
      - group
      - user
      title: NewGroupMembership
      type: object
    GroupMembershipId:
      description: The ID of a group membership.
      format: uuid
      pattern: "^[a-z]+-[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$"
      title: GroupMembershipId
      type: string
    GroupId:
      description: |
        The ID of a group. This is a UUID with the prefix "group-".
      format: uuid
      pattern: "^[a-z]+-[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$"
      title: GroupId
      type: string
    NewGroup:
      allOf:
      - $ref: '#/components/schemas/UpdateGroup'
      description: |
        A group. This could be a project group, a team, or something else. This is sent by the client when creating a new group.
      required:
      - createdBy
      - name
      title: NewGroup
    UpdateGroup:
      description: |
        A group. This could be a project group, a team, or something else. This is sent by the client when updating an existing group.
      example:
        createdBy: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        name: Project Group
      properties:
        name:
          description: The name of the group.
          example: Project Group
          title: name
          type: string
        createdBy:
          description: The ID of the user who created the group
          format: uuid
          pattern: "^[a-z]+-[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$"
          title: createdBy
          type: string
      title: UpdateGroup
      type: object
    _groups__id__get_200_response:
      example:
        Group: null
      properties:
        Group:
          $ref: '#/components/schemas/Group'
      title: _groups__id__get_200_response
    _groups__id__memberships_get_200_response:
      example:
        GroupMemberships:
        - null
        - null
      properties:
        GroupMemberships:
          items:
            $ref: '#/components/schemas/GroupMembership'
          title: GroupMemberships
          type: array
      title: _groups__id__memberships_get_200_response
    _groups__id__memberships_post_201_response:
      example:
        GroupMembership: null
      properties:
        GroupMembership:
          $ref: '#/components/schemas/GroupMembership'
      title: _groups__id__memberships_post_201_response
    _groups_get_200_response:
      example:
        Groups:
        - null
        - null
      properties:
        Groups:
          items:
            $ref: '#/components/schemas/Group'
          title: Groups
          type: array
      title: _groups_get_200_response
    Group_allOf:
      description: |
        A group. This could be a project group, a team, or something else. The difference between this and NewGroup is that this has an ID, which is assigned by the server. It also has timestamps for when the group was created and last updated.
      properties:
        id:
          description: |
            The ID of a group. This is a UUID with the prefix "group-".
          format: uuid
          pattern: "^[a-z]+-[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$"
          title: GroupId
          type: string
        createdAt:
          description: The date and time the group was created.
          example: 2019-01-01T00:00:00Z
          format: date-time
          readOnly: true
          title: createdAt
          type: string
        lastUpdatedAt:
          description: The date and time the group was last updated.
          example: 2019-03-01T00:00:00Z
          format: date-time
          readOnly: true
          title: lastUpdatedAt
          type: string
      required:
      - createdAt
      - id
      - lastUpdatedAt
      title: Group_allOf
      type: object
      example: null
    GroupMembership_allOf:
      properties:
        id:
          description: The ID of a group membership.
          format: uuid
          pattern: "^[a-z]+-[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$"
          title: GroupMembershipId
          type: string
      title: GroupMembership_allOf
      type: object
      example: null
